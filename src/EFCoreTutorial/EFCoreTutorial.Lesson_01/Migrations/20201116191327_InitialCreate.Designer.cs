// <auto-generated />
using System;
using EFCoreTutorial.Lesson_01.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EFCoreTutorial.Lesson_01.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201116191327_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Classes", "lesson_01");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Schools", "lesson_01");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("ClassId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Students", "lesson_01");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Teachers", "lesson_01");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.Class", b =>
                {
                    b.HasOne("EFCoreTutorial.Lesson_01.Domain.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.Student", b =>
                {
                    b.HasOne("EFCoreTutorial.Lesson_01.Domain.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.Teacher", b =>
                {
                    b.HasOne("EFCoreTutorial.Lesson_01.Domain.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId");

                    b.Navigation("School");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.School", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("EFCoreTutorial.Lesson_01.Domain.Teacher", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
